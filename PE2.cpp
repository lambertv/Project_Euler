// PE.cpp
// Program by Valerie Lambert

/*  Project Euler Problem 2- - - -
 *  Each new term in the Fibonacci sequence is generated by adding the
 *  previous two terms. By starting with 1 and 2, the first terms will be:
 *
 *      1,2,3,5,8,13,21,24,55,89,...
 *
 *  By considering the terms in the Fibonacci sequence whose values do not
 *  exceed four million, find the sum of the even-valued terms.
 *  - - - - - - - - - - - - - - - - 
 *
 *  C++ solution for Problem 2. For the max Fibonacci number being 4000000
 *  we don't actually need the terms to be long.
 */
#include <iostream>

long sumFibNum(long max_fib);

int main()
{
    std::cout << sumFibNum(4000000) << std::endl;
    return 0;
}

long sumFibNum(long max_fib)
{
    long sum = 0;
    long a = 1;
    long b = 1;
    long c = a+b;
    while (c<=4000000) 
    {
        sum += c;
        a = b+c;
        b = c+a;
        c = a+b;
    }
    return sum;
}
